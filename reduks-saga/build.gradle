apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
group = GROUP_MAVEN_PUSH //required by jitpack

//disable warnings when using coroutines
//kotlin { experimental { coroutines 'enable' } }

compileKotlin {
    sourceCompatibility = sourceCompatibility_
    //I want this library to be linkable from android projects
    targetCompatibility = targetCompatibility_
    //I want this library to be linkable from android projects
        kotlinOptions.jvmTarget = kotlinJvmTarget
}
// important to set compileTestKotlin jvmTarget otherwise tests will not run
// see https://kotlinlang.org/docs/gradle-configure-project.html#check-for-jvm-target-compatibility-of-related-compile-tasks
compileTestKotlin {
    kotlinOptions.jvmTarget = kotlinJvmTarget
}


//the following would not be needed if we would move kotlin code to src/main/java
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}


dependencies {
   // implementation libraries.kotlinStdLib
   // apiElements libraries.kotlinStdLib
    testImplementation libraries.junit
    testImplementation libraries.assertJ
//    testImplementation libraries.rxJava

    api project(':reduks-core')
    implementation project(':reduks-core')
    implementation libraries.kotlinCoroutinesCore
    api libraries.kotlinCoroutinesCore //coroutines are part of the library api
    testImplementation project(':reduks-core-async')
   // implementation libraries.kotlinCoroutinesAndroid
   // apiElements libraries.kotlinCoroutinesAndroid
   // testImplementation libraries.robolectric

//    apiElements libraries.kotlinCoroutinesAndroid //coroutines are part of the library api
}

apply from: '../maven-push-kotlin.gradle'


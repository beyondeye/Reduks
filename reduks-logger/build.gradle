apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka' //make sure this is after apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
group = GROUP_MAVEN_PUSH //required by jitpack

android {
    namespace 'com.beyondeye.reduks_logger'
    compileSdkVersion versions.compileSdk
//        buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode = 1
        versionName VERSION_NAME
    }

    compileOptions {
        sourceCompatibility sourceCompatibility_
        targetCompatibility targetCompatibility_
    }
    kotlinOptions {
        jvmTarget = kotlinJvmTarget
    }
    //the following would not be needed if we would move kotlin code to src/main/java
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    lintOptions {
        abortOnError false
    }
    // see https://developer.android.com/build/publish-library/configure-pub-variants
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
    //config for robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}
dependencies {
    //implementation libraries.kotlinStdLib
    //api libraries.kotlinStdLib

    testImplementation libraries.junit
    testImplementation libraries.assertJ
    testImplementation libraries.robolectric
    //testImplementation libraries.equalsverifier

    implementation project(':reduks-core') //reduks-core dep not exposed to consumer: consumer need to to include reduks-core dep explicitely
    implementation libraries.gson
//    implementation libraries.kjsonpatch
    implementation project(':kjsonpatch-core')
}

apply from: '../maven-push.gradle'
